[{"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\index.js":"1","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\reportWebVitals.js":"2","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\App.js":"3","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\Home.js":"4","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\Nav.js":"5","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\ChooseActor.js":"6","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Components\\Customer.js":"7","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Components\\Admin.js":"8","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminRegister.js":"9","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminHome.js":"10","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminLogin.js":"11","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminProfile.js":"12","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\UpdateAdmin.js":"13","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\Logout.js":"14","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\CustomerRegistration.js":"15","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\Login.js":"16","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\CustomerHome.js":"17","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\ListCustomer.js":"18","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\UpdateCustomer.js":"19","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\OrderConfirm.js":"20","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\PaymentHome.js":"21","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\ListProduct.js":"22","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\PaymentForm.js":"23","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\CustomerProduct.js":"24","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\AddOrder.js":"25","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\ListOrder.js":"26","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\UpdateProduct.js":"27","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\AddProduct.js":"28","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\UpdateOrder.js":"29","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\AdminService.js":"30","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\ProductService.js":"31","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\CustomerService.js":"32","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\OrderService.js":"33"},{"size":288,"mtime":1621850029169,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":168,"mtime":1621847368763,"results":"37","hashOfConfig":"35"},{"size":3544,"mtime":1611831329230,"results":"38","hashOfConfig":"35"},{"size":463,"mtime":1611829450130,"results":"39","hashOfConfig":"35"},{"size":939,"mtime":1621847753999,"results":"40","hashOfConfig":"35"},{"size":1145,"mtime":1611249068000,"results":"41","hashOfConfig":"35"},{"size":1518,"mtime":1611821650815,"results":"42","hashOfConfig":"35"},{"size":4100,"mtime":1621839931042,"results":"43","hashOfConfig":"35"},{"size":1439,"mtime":1621846048540,"results":"44","hashOfConfig":"35"},{"size":1833,"mtime":1621839901227,"results":"45","hashOfConfig":"35"},{"size":3215,"mtime":1611829053431,"results":"46","hashOfConfig":"35"},{"size":4083,"mtime":1611829095590,"results":"47","hashOfConfig":"35"},{"size":540,"mtime":1611396594000,"results":"48","hashOfConfig":"35"},{"size":5108,"mtime":1621846261302,"results":"49","hashOfConfig":"35"},{"size":1963,"mtime":1621840027493,"results":"50","hashOfConfig":"35"},{"size":1072,"mtime":1621846247389,"results":"51","hashOfConfig":"35"},{"size":3717,"mtime":1611396594000,"results":"52","hashOfConfig":"35"},{"size":5380,"mtime":1611396594000,"results":"53","hashOfConfig":"35"},{"size":663,"mtime":1621840051561,"results":"54","hashOfConfig":"35"},{"size":896,"mtime":1611421088000,"results":"55","hashOfConfig":"35"},{"size":3202,"mtime":1611830648483,"results":"56","hashOfConfig":"35"},{"size":1931,"mtime":1611829450131,"results":"57","hashOfConfig":"35"},{"size":3614,"mtime":1611828932466,"results":"58","hashOfConfig":"35"},{"size":4049,"mtime":1611829149021,"results":"59","hashOfConfig":"35"},{"size":2845,"mtime":1611828878614,"results":"60","hashOfConfig":"35"},{"size":3096,"mtime":1621832703818,"results":"61","hashOfConfig":"35"},{"size":3230,"mtime":1611828904388,"results":"62","hashOfConfig":"35"},{"size":4531,"mtime":1611828830696,"results":"63","hashOfConfig":"35"},{"size":511,"mtime":1621839952470,"results":"64","hashOfConfig":"35"},{"size":669,"mtime":1621839985050,"results":"65","hashOfConfig":"35"},{"size":740,"mtime":1621839966084,"results":"66","hashOfConfig":"35"},{"size":858,"mtime":1621839974772,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rp6u5x",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\index.js",[],["148","149"],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\reportWebVitals.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\App.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\Home.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\Nav.js",["150"],"import \"./../App.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h4>Supply Chain Management</h4>\r\n      <ul className=\"navlink\">\r\n        \r\n        <Link className='navStyle' to=\"/\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link className='navStyle' to=\"/chooseactor\">\r\n          <li>Login</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Landing\\ChooseActor.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Components\\Customer.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Components\\Admin.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminRegister.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminHome.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminLogin.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\AdminProfile.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Admin\\UpdateAdmin.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\Logout.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\CustomerRegistration.js",["151"],"import React, { Component } from 'react'\r\nimport './../CSS/Res.css'\r\nimport axios from 'axios'\r\nimport CustomerService from '../Services/CustomerService'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass CustomerRegister extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            customerId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            mailId: '',\r\n            mobileNo: '',\r\n            address: ''\r\n\r\n        }\r\n        this.inputRef = React.createRef()\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n\r\n    customerIdhandler = (event) => {\r\n        this.setState({\r\n            customerId: event.target.value\r\n        })\r\n    }\r\n    firstNamehandler = (event) => {\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n    }\r\n    lastNamehandler = (event) => {\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n    }\r\n    passwordhandler = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n    mailIdhandler = (event) => {\r\n        this.setState({\r\n            mailId: event.target.value\r\n        })\r\n    }\r\n    mobileNodhandler = (event) => {\r\n        this.setState({\r\n            mobileNo: event.target.value\r\n        })\r\n    }\r\n    addresshandler = (event) => {\r\n        this.setState({\r\n            address: event.target.value\r\n        })\r\n    }\r\n\r\n    backHandler(){\r\n        this.props.history.push('/resHome')\r\n    }\r\n  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        let customer  ={customerId:this.state.customerId, firstName: this.state.firstName, lastName: this.state.lastName, password: this.state.password, mailId: this.state.mailId, mobileNo:this.state.mobileNo, address: this.state.address}\r\n        CustomerService.addCustomer(customer).then(response => this.props.history.push('/resHome'));\r\n        <Redirect to = '/resHome' />\r\n                \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Customer Registration</h1>\r\n                    <label>Customer Id :</label>  <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Some Id\"\r\n                      name=\"rid\"\r\n                      value={this.state.customerId}\r\n                      onChange={this.customerIdhandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                    <label>First Name :</label>  <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter First Name...\"\r\n                      name=\"firstName\"\r\n                      value={this.state.firstName}\r\n                      onChange={this.firstNamehandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                    <label>Last Name :</label>  <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Last Name...\"\r\n                      name=\"lastName\"\r\n                      value={this.state.lastName}\r\n                      onChange={this.lastNamehandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                    <label>Email Id :</label>  <input\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email Id\"\r\n                      name=\"Email Id\"\r\n                      value={this.state.mailId}\r\n                      onChange={this.mailIdhandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                     <label>Password :</label>\r\n                     <input\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.passwordhandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n        \r\n                    <label> Address :</label>\r\n                     <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Address\"\r\n                      name=\"Address\"\r\n                      value={this.state.address}\r\n                      onChange={this.addresshandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n                    <label>Mobile No. :</label>\r\n                     <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Mobile No.\"\r\n                      name=\"contact\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.mobileNodhandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n            \r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomerRegister\r\n","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\Login.js",["152"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n \r\nclass Login extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n    const token =localStorage.getItem(\"token\")\r\n\r\n        this.state = {\r\n        customerId:'',\r\n        password:'',\r\n    }\r\n        this.inputRef = React.createRef()\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n}\r\n\r\ncustomerIdhandler = (event) => {\r\n    this.setState({\r\n        customerId: event.target.value\r\n    })\r\n}\r\n\r\npasswordhandler = (event) => {\r\n    this.setState({\r\n        password: event.target.value\r\n    })\r\n}\r\n \r\nhandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let URL = 'http://localhost:9095/customer/login?customerId='+parseInt(this.state.customerId)+'&password='+this.state.password\r\n    console.log(this.state)\r\n    console.log(URL)\r\n    axios.post(URL).then(response => this.props.history.push('/cusHome'));\r\n        <Redirect to= '/cusHome' />\r\n        \r\n}\r\n \r\n\r\n \r\nrender() {\r\n    return (\r\n        <div>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h1>Customer Login</h1>\r\n                <label>Customer Id :</label>  <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Some Id\"\r\n                  name=\"rid\"\r\n                  value={this.state.customerId}\r\n                  onChange={this.customerIdhandler}\r\n                  ref={this.inputRef}/>\r\n                  <br />\r\n                 <label>Password :</label>\r\n                 <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.passwordhandler}\r\n                  ref={this.inputRef}/>\r\n                 <br />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n        </div>  \r\n        \r\n    )\r\n}\r\n}\r\n \r\nexport default Login;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\CustomerHome.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\ListCustomer.js",["153"],"import axios from 'axios';\r\nimport React, { Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CustomerService from '../Services/CustomerService';\r\nimport \"./../CSS/Menu.css\";\r\n\r\nclass ListCustomer extends Component {\r\n    static defaultProps = { // <-- DEFAULT PROPS\r\n        customer: []       // undefined gets converted to array,render won't trigger error\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = { \r\n            customers: []\r\n         }\r\n         this.backHandler=this.backHandler.bind(this);\r\n         this.updateCustomer=this.updateCustomer.bind(this);\r\n         this.deleteCustomer =this.deleteCustomer.bind(this);\r\n    }\r\n    updateCustomer(customerId) {\r\n        this.props.history.push(`/update/${customerId}`);\r\n    }\r\n\r\n    deleteCustomer(customerId) {\r\n        CustomerService.deleteCustomer(customerId)\r\n                .then(response =>{\r\n                    this.props.history.push('/cusHome');\r\n                });\r\n    }\r\n    componentDidMount(){\r\n        CustomerService.getCustomers()\r\n        .then((response) => {\r\n            this.setState({ customers: response.data} );\r\n        });\r\n    }\r\n    backHandler(){\r\n        this.props.history.push('/cusHome')\r\n    }\r\n    \r\n    \r\n  \r\n    render() { \r\n        if (this.state.loggedIn === false) {\r\n            return <Redirect to=\"/\" />;\r\n          }\r\n        return ( \r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Customer List</h2>\r\n                <div className='row'>\r\n                    <table className='table table-striped table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Customer Id </th>\r\n                            <th>Customer First Name</th>\r\n                                <th>Customer Last Name</th>\r\n                                <th>Customer Email Id</th>\r\n                                <th>Customer Mobile Number</th>\r\n                                <th>Customer Address</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.customers.map(\r\n                                    customer =>\r\n                                    <tr key={customer.id}>\r\n                                        <td>{customer.customerId}</td>\r\n                                        <td>{customer.firstName}</td>\r\n                                        <td>{customer.lastName}</td>\r\n                                        <td>{customer.mailId}</td>\r\n                                        <td>{customer.mobileNo}</td>\r\n                                        <td>{customer.address}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-success\" \r\n                                            onClick={() => this.updateCustomer(customer.customerId)}>UPDATE</button>\r\n                                            <button className=\"btn btn-info\" style={{marginLeft:\"10px\"}} \r\n                                            onClick={() => this.deleteCustomer(customer.customerId)}>DELETE</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ListCustomer;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\UpdateCustomer.js",["154","155","156"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport CustomerService from '../Services/CustomerService';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass UpdateCustomer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            customerId: this.props.match.params.customerId,\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            mailId: '',\r\n            mobileNo: '',\r\n            address: ''\r\n        };\r\n        this.inputRef = React.createRef()\r\n        this.submitForm = this.submitForm.bind(this)\r\n        \r\n      }\r\n\r\n      componentDidMount(){\r\n          CustomerService.getCustomerById(this.state.customerId)\r\n          .then(response => {\r\n              let customer = response.data\r\n              this.setState({\r\n                firstName: customer.firstName,\r\n                lastName: customer.lastName,\r\n                password: customer.password,\r\n                mailId: customer.mailId,\r\n                mobileNo: customer.mobileNo,\r\n                address: customer.address \r\n              });\r\n          })\r\n    }\r\n\r\n    firstNamehandler = (event) => {\r\n      this.setState({\r\n          firstName: event.target.value\r\n      })\r\n  }\r\n  lastNamehandler = (event) => {\r\n      this.setState({\r\n          lastName: event.target.value\r\n      })\r\n  }\r\n  passwordhandler = (event) => {\r\n      this.setState({\r\n          password: event.target.value\r\n      })\r\n  }\r\n  mailIdhandler = (event) => {\r\n      this.setState({\r\n          mailId: event.target.value\r\n      })\r\n  }\r\n  mobileNodhandler = (event) => {\r\n      this.setState({\r\n          mobileNo: event.target.value\r\n      })\r\n  }\r\n  addresshandler = (event) => {\r\n      this.setState({\r\n          address: event.target.value\r\n      })\r\n  }\r\n\r\n  cancelHandler(){\r\n    this.props.history.push('/resHome');\r\n    // <Redirect to= '/viewCustDetails' />\r\n  }\r\n   \r\n      submitForm =(event) =>{\r\n          event.preventDefault();\r\n          let customer  ={firstName: this.state.firstName, lastName: this.state.lastName, password: this.state.password, mailId: this.state.mailId, mobileNo:this.state.mobileNo, address: this.state.address}\r\n          CustomerService.updateCustomer(customer,this.state.customerId)\r\n                    .then(response => this.props.history.push('/viewCustDetails'));\r\n      }\r\n      render() {\r\n        return (\r\n          <div>\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"card col-md-6  offset-md-3\">\r\n                  <h3>Update Customer</h3>\r\n                  <div className=\"card-body\">\r\n                    <form onSubmit={this.submitForm}>\r\n                      <div className=\"form-group\">\r\n                      <label>First Name :</label> \r\n                       <input type=\"text\"\r\n                      placeholder=\"Enter First Name...\"\r\n                      name=\"firstName\"\r\n                      value={this.state.firstName}\r\n                      onChange={this.firstNamehandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                    <label>Last Name :</label> \r\n                     <input type=\"text\"\r\n                      placeholder=\"Enter Last Name...\"\r\n                      name=\"lastName\"\r\n                      value={this.state.lastName}\r\n                      onChange={this.lastNamehandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                    <label>Email Id :</label> \r\n                     <input type=\"email\"\r\n                      placeholder=\"Enter Email Id\"\r\n                      name=\"Email Id\"\r\n                      value={this.state.mailId}\r\n                      onChange={this.mailIdhandler}\r\n                      ref={this.inputRef}\r\n                    /><br />\r\n                     <label>Password :</label>\r\n                     <input type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.passwordhandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n        \r\n                    <label> Address :</label>\r\n                     <input  type=\"text\"\r\n                      placeholder=\"Enter Address\"\r\n                      name=\"Address\"\r\n                      value={this.state.address}\r\n                      onChange={this.addresshandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n                    <label>Mobile No. :</label>\r\n                     <input type=\"text\"\r\n                      placeholder=\"Enter Mobile No.\"\r\n                      name=\"contact\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.mobileNodhandler}\r\n                      ref={this.inputRef}/>\r\n                    <br />\r\n                        <input type=\"submit\"  />\r\n                        <br />\r\n                      </div>\r\n                    </form>\r\n                    <button className='btn-lg btn-primary' onClick={this.cancelHandler}>Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n \r\nexport default UpdateCustomer;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\OrderConfirm.js",["157"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class OrderConfirm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <h1>Order Confirm, Enjoy your Product!!!!</h1>\r\n                <br></br>\r\n                <Link to=\"/cusHome\">Go Back to Customer Home Page</Link>\r\n                <br></br>\r\n                <br></br>\r\n                <Link to =\"/viewCustMenu\">Go Back to Product Page</Link>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\PaymentHome.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\ListProduct.js",["158"],"import axios from 'axios';\r\nimport React, { Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProductService from '../Services/ProductService';\r\nimport \"./../CSS/Menu.css\";\r\n\r\nclass ListProduct extends Component {\r\n    static defaultProps = { // <-- DEFAULT PROPS\r\n        product: []       // undefined gets converted to array,render won't trigger error\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    \r\n        this.state = { \r\n            products: [],\r\n            \r\n         }\r\n         this.backHandler=this.backHandler.bind(this);\r\n         this.updateProduct=this.updateProduct.bind(this);\r\n         this.deleteProduct =this.deleteProduct.bind(this);\r\n    }\r\n    updateProduct(productid) {\r\n        this.props.history.push(`/updateProduct/${productid}`);\r\n    }\r\n\r\n    deleteProduct(productid) {\r\n        ProductService.deleteProduct(productid)\r\n                .then(response =>{\r\n                    this.props.history.push('/resHome');\r\n                });\r\n    }\r\n    componentDidMount(){\r\n        ProductService.getProduct()\r\n        .then((response) => {\r\n            this.setState({ products: response.data} );\r\n        });\r\n    }\r\n    backHandler(){\r\n        this.props.history.push('/resHome')\r\n    }\r\n    \r\n    \r\n  \r\n    render() { \r\n        if (this.state.loggedIn === true) {\r\n            return <Redirect to=\"/\" />;\r\n          }\r\n        return ( \r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Product List</h2>\r\n                <div className='row'>\r\n                    <table className='table table-striped table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Product Name</th>\r\n                                <th>Product Price</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.products.map(\r\n                                    product =>\r\n                                    <tr key ={product.productid}>\r\n                                        <td>{product.productName}</td>\r\n                                        <td>{product.productPrice}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-success\" \r\n                                            onClick={() => this.updateProduct(product.productid)}>UPDATE</button>\r\n                                            <button className=\"btn btn-info\" style={{marginLeft:\"10px\"}} \r\n                                            onClick={() => this.deleteProduct(product.productid)}>DELETE</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ListProduct;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Customer\\PaymentForm.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\CustomerProduct.js",["159"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProductService from \"../Services/ProductService\";\r\nimport OrderService from \"../Services/OrderService\";\r\nimport \"./../CSS/Menu.css\";\r\n\r\nclass CustomerProduct extends Component {\r\n  static defaultProps = {\r\n    // <-- DEFAULT PROPS\r\n    product: [], // undefined gets converted to array,render won't trigger error\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedIn = true;\r\n    if (token == null) {\r\n      if (token == null) {\r\n        loggedIn = true;\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      products: [],\r\n      loggedIn,\r\n      order_id:'',\r\n      order: []\r\n    };\r\n    this.backHandler = this.backHandler.bind(this);\r\n    this.enterDetails=this.enterDetails.bind(this);\r\n    this.paymentDetails=this.paymentDetails.bind(this);\r\n    //this.deleteOrder =this.deleteOrder.bind(this);\r\n  }\r\n\r\n  addOrder(m_id) {\r\n    this.props.history.push(`/addOrder/${m_id}`);\r\n  }\r\n  enterDetails() {\r\n    this.props.history.push(`/viewCustOrder/`);\r\n  }\r\n  paymentDetails() {\r\n    this.props.history.push(`/paymentHome/`);\r\n  }\r\n\r\n \r\n\r\n  componentDidMount() {\r\n    ProductService.getProduct().then((response) => {\r\n      this.setState({ products: response.data });\r\n    });\r\n    OrderService.getOrders().then((response) =>{\r\n        this.setState({order: response.data})\r\n    })\r\n  }\r\n   backHandler() {\r\n     this.props.history.push(\"/cusHome\");\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loggedIn === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div style={{ margin: \"0 50px 0 50px\" }}>\r\n        <h2 className=\"text-center\" style={{ color: \"white\" }}>\r\n          Product List\r\n        </h2>\r\n\r\n        <table\r\n          className=\"table table-borderless table-dark table-hover\"\r\n          style={{ opacity: \"0.95\", width: \"100%\" }}\r\n        >\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>Product ID</th>\r\n              <th>Product Name</th>\r\n              <th>Product Price</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.products.map((product) => (\r\n              <tr key={product.productid}>\r\n                <td>{product.productid}</td>\r\n                <td>{product.productName}</td>\r\n                <td>{product.productPrice}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => this.addOrder(product.product_id)}\r\n                  >\r\n                    ADD ORDER\r\n                  </button> \r\n                                \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n       \r\n        <button className=\"btn-lg btn-primary\" style={{marginLeft: '10px', float:\"left\"}} onClick={this.backHandler}>\r\n          Back\r\n        </button>\r\n        <button\r\n                    className=\"btn btn-info\"\r\n                    style={{ marginLeft: \"10px\", float:'right'}}\r\n                    onClick={() => this.enterDetails()}\r\n                  >VIEW ORDER\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    style={{ marginLeft: \"10px\", float:'right'}}\r\n                    onClick={() => this.paymentDetails()}\r\n                  >PAYMENT\r\n                  </button>\r\n\r\n                  \r\n                  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerProduct;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\AddOrder.js",["160","161","162"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport ProductService from \"../Services/ProductService\";\r\nimport OrderService from \"../Services/OrderService\";\r\n\r\nclass AddOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productid: this.props.match.params.productid,\r\n        quantity: '',\r\n        customerId: ''\r\n    };\r\n    this.inputRef = React.createRef()\r\n    this.backHandler=this.backHandler.bind(this);\r\n    this.submitForm = this.submitForm.bind(this)\r\n    \r\n  }\r\n  componentDidMount(){\r\n    ProductService.getProductById(this.state.productid)\r\n    .then(response => {\r\n        let product = response.data\r\n        this.setState({\r\n            productName: product.productName,\r\n            productPrice: parseInt(product.productPrice)\r\n        });\r\n    })\r\n}\r\n \r\n//   orderIDHandler =(event) => {\r\n//     this.setState({order_id: event.target.value})\r\n// }\r\n  quantityHandler =(event) => {\r\n      this.setState({quantity: event.target.value})\r\n  }\r\n productIDHandler =(event) =>{\r\n      this.setState({productid: event.target.value})\r\n } \r\n  customerIDHandler =(event) =>{\r\n    this.setState({customerId: event.target.value})\r\n}\r\n  backHandler(){\r\n    this.props.history.push('/viewCustProduct')\r\n}\r\n\r\n//\r\n  submitForm =(event) =>{\r\n      event.preventDefault();\r\n      let price;\r\n      let order={quantity: this.state.quantity, productid:this.state.productid, customerId:this.state.customerId}\r\n      OrderService.addOrder(order, this.state.customerId, this.state.productid)\r\n                .then(response => this.props.history.push('/cusHome'));\r\n      <Redirect to=\"/cusProduct\" />\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"card col-md-6  offset-md-3\">\r\n              <h3>ADD ORDER</h3>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.submitForm}>\r\n                  <div className=\"form-group\">\r\n                  {/* <label>Order ID: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the Order ID\"\r\n                      name=\"order_id\"\r\n                      value={this.state.order_id}\r\n                      onChange={this.orderIDHandler}\r\n                      ref={this.inputRef}\r\n                    /> */}\r\n                    <br />\r\n                      <label>Product Quantity: </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"Enter the Number of items\"\r\n                      name=\"productName\"\r\n                      value={this.state.quantity}\r\n                      onChange={this.quantityHandler}\r\n                      ref={this.inputRef}\r\n                    />\r\n                    <br />\r\n                    <label>Product ID: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the Menu ID\"\r\n                      name=\"productid\"\r\n                      value={this.state.productid}\r\n                       onChange={this.productIDHandler} \r\n                    />\r\n                    <br />\r\n                    <label>Customer ID: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the Customer ID\"\r\n                      name=\"customerId\"\r\n                      value={this.state.customerId}\r\n                      onChange={this.customerIDHandler} \r\n                    />\r\n                    <br />\r\n                    <input type=\"submit\"  />\r\n                    <br />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n        {/* <Link to=\"/logout\">Logout</Link> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOrder;\r\n","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\ListOrder.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\UpdateProduct.js",["163","164","165"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport ProductService from '../Services/ProductService';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass updateProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            productid: this.props.match.params.productid,\r\n            productName: '',\r\n            productPrice: ''\r\n        };\r\n        this.inputRef = React.createRef()\r\n        this.submitForm = this.submitForm.bind(this)\r\n        \r\n      }\r\n\r\n      componentDidMount(){\r\n          ProductService.getProductById(this.state.productid)\r\n          .then(response => {\r\n              let product = response.data\r\n              this.setState({\r\n                  productName: product.productName,\r\n                  productPrice: parseInt(product.productPrice)\r\n              });\r\n          })\r\n    }\r\n\r\n      productNameHandler =(event) => {\r\n          this.setState({productName: event.target.value})\r\n      }\r\n      productPriceHandler =(event) =>{\r\n          this.setState({productPrice: event.target.value})\r\n      }\r\n   \r\n      submitForm =(event) =>{\r\n          event.preventDefault();\r\n          let price;\r\n          let product ={productName: this.state.productName, productPrice: parseInt(this.state.productPrice)}\r\n          ProductService.updateProduct(product,this.state.productid)\r\n                    .then(response => this.props.history.push('/resHome'));\r\n      }\r\n      render() {\r\n        return (\r\n          <div>\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"card col-md-6  offset-md-3\">\r\n                  <h3>UPDATE Product</h3>\r\n                  <div className=\"card-body\">\r\n                    <form onSubmit={this.submitForm}>\r\n                      <div className=\"form-group\">\r\n                          <label>Product Name: </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Enter the name of the food\"\r\n                          name=\"productName\"\r\n                          value={this.state.productName}\r\n                          onChange={this.productNameHandler}\r\n                          ref={this.inputRef}\r\n                        />\r\n                        <br />\r\n                        <label>Price: </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Enter the price\"\r\n                          name=\"productPrice\"\r\n                          value={this.state.productPrice}\r\n                          onChange={this.productPriceHandler} \r\n                        />\r\n                        <br />\r\n                        <input type=\"submit\"  />\r\n                        <br />\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Link to=\"/logout\">Logout</Link>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n \r\nexport default updateProduct;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Product\\AddProduct.js",["166","167","168"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport ProductService from \"../Services/ProductService\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productid: '',\r\n        productName: '',\r\n        productPrice: ''\r\n    };\r\n    this.inputRef = React.createRef()\r\n    this.backHandler=this.backHandler.bind(this);\r\n    this.submitForm = this.submitForm.bind(this)\r\n    \r\n  }\r\n \r\n  productnameHandler =(event) => {\r\n      this.setState({productName: event.target.value})\r\n  }\r\n  productpriceHandler =(event) =>{\r\n      this.setState({productPrice: event.target.value})\r\n  }\r\n  productIDHandler =(event) =>{\r\n    this.setState({productid: event.target.value})\r\n}\r\n  backHandler(){\r\n    this.props.history.push('/resHome')\r\n}\r\n\r\n\r\n  submitForm =(event) =>{\r\n      event.preventDefault();\r\n      let price;\r\n      let product ={productid:this.state.productid, productName: this.state.productName, productPrice: parseInt(this.state.productPrice)}\r\n     \r\n\r\n      ProductService.addProduct(product)\r\n                .then(response => this.props.history.push('/resHome'));\r\n      <Redirect to=\"/resHome\" />\r\n  }\r\n  render() {\r\n    return (\r\n      \r\n        <div style={{marginTop:\"100px\"}}>\r\n          <div className=\"card col-md-6  offset-md-3\">\r\n              <h3>ADD Product</h3>\r\n            <div className=\"card-column\" style={{margin:'auto auto'}}></div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.submitForm}>\r\n                  <div className=\"form-group\">\r\n                  <label>Product ID: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the ID\"\r\n                      name=\"productid\"\r\n                      value={this.state.productid}\r\n                      onChange={this.productIDHandler}\r\n                      ref={this.inputRef}\r\n                    />\r\n                      <label>Product Name: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the name of the food\"\r\n                      name=\"productName\"\r\n                      value={this.state.productName}\r\n                      onChange={this.productnameHandler}\r\n                      ref={this.inputRef}\r\n                    />\r\n                    <br />\r\n                    <label>Price: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the price\"\r\n                      name=\"productPrice\"\r\n                      value={this.state.productPrice}\r\n                      onChange={this.productpriceHandler} \r\n                    />\r\n                    <br />\r\n                    <input type=\"submit\"  />\r\n                    <br />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            \r\n            </div>\r\n          \r\n        <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n        {/* <Link to=\"/logout\">Logout</Link> */}\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Order\\UpdateOrder.js",["169","170","171","172"],"import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport ProductService from '../Services/ProductService';\r\nimport { Redirect } from 'react-router-dom'\r\nimport OrderService from '../Services/OrderService';\r\n\r\n\r\nclass UpdateOrder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            order_id:this.props.match.params.order_id,\r\n            quantity:' ',\r\n            customerId: ' ',\r\n            productid:' '     \r\n        };\r\n        this.inputRef = React.createRef()\r\n        this.submitForm = this.submitForm.bind(this)\r\n        \r\n      }\r\n\r\n      componentDidMount(){\r\n          OrderService.getOrderById(this.state.order_id)\r\n          .then(response => {\r\n            let order = response.data\r\n              this.setState({\r\n                quantity: order.quantity,\r\n                  customerId: order.customerId,\r\n                  productid: order.product.productid\r\n              });\r\n          })\r\n    }\r\n\r\n      // orderIDHandler =(event) => {\r\n      //     this.setState({order_id: event.target.value})\r\n      // }\r\n      quantityHandler =(event) =>{\r\n          this.setState({quantity: event.target.value})\r\n      }\r\n      customerIDHandler =(event) =>{\r\n        this.setState({customerId: event.target.value})\r\n    }\r\n    productIDHandler =(event) =>{\r\n      this.setState({productid: event.target.value})\r\n    }\r\n\r\n   \r\n    backHandler = ()=>\r\n    {\r\n      this.props.history.push('/cusHome')\r\n    }\r\n      submitForm =(event) =>{\r\n          event.preventDefault();\r\n  //\r\n          let orders ={ quantity: this.state.quantity, customerId: this.state.customerId, productid: this.state.productid}\r\n          OrderService.updateOrder(orders,this.state.order_id)\r\n                    .then(response => this.props.history.push('/cusHome'));\r\n      }\r\n      render() {\r\n        return (\r\n            <div>\r\n              <div>\r\n                <div className=\"row\">\r\n                  <div className=\"card col-md-6  offset-md-3\">\r\n                    <h3>UPDATE ORDER</h3>\r\n                    <div className=\"card-body\">\r\n                      <form onSubmit={this.submitForm}>\r\n                        <div className=\"form-group\">\r\n                        <label>Order ID: </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter the Order ID\"\r\n                            name=\"order_id\"\r\n                            value={this.state.order_id}\r\n                            onChange={this.orderIDHandler}\r\n                            ref={this.inputRef}\r\n                          />\r\n                          <br />\r\n                            <label>Product Quantity: </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            placeholder=\"Enter the Number of items\"\r\n                            name=\"productName\"\r\n                            value={this.state.quantity}\r\n                            onChange={this.quantityHandler}\r\n                            ref={this.inputRef}\r\n                          />\r\n                          <br />\r\n                          <label>Product ID: </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter the Product ID\"\r\n                            name=\"productid\"\r\n                            value={this.state.productid}\r\n                             onChange={this.productIDHandler} \r\n                          />\r\n                          <br />\r\n                          <label>Customer ID: </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter the Customer ID\"\r\n                            name=\"customerId\"\r\n                            value={this.state.customerId}\r\n                            onChange={this.customerIDHandler} \r\n                          />\r\n                          <br />\r\n                          <input type=\"submit\"  />\r\n                          <br />\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button className='btn-lg btn-primary' onClick={this.backHandler}>Back</button>\r\n              {/* <Link to=\"/logout\">Logout</Link> */}\r\n            </div>\r\n          );\r\n        }\r\n}\r\n \r\nexport default UpdateOrder;","C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\AdminService.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\ProductService.js",[],["173","174"],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\CustomerService.js",[],"C:\\Users\\sonyyada\\Downloads\\Sprint project\\Srint3Frontend\\sprint\\src\\Services\\OrderService.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"184","line":8,"column":11,"nodeType":"181","messageId":"182","endLine":8,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"186","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":5,"column":5,"nodeType":"189","messageId":"190","endLine":8,"endColumn":6},{"ruleId":"179","severity":1,"message":"183","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"183","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"191","line":50,"column":11,"nodeType":"181","messageId":"182","endLine":50,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"186","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"191","line":40,"column":15,"nodeType":"181","messageId":"182","endLine":40,"endColumn":20},{"ruleId":"179","severity":1,"message":"185","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"191","line":36,"column":11,"nodeType":"181","messageId":"182","endLine":36,"endColumn":16},{"ruleId":"179","severity":1,"message":"185","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"192","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":22},{"ruleId":"179","severity":1,"message":"186","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"175","replacedBy":"193"},{"ruleId":"177","replacedBy":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'token' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'price' is defined but never used.","'ProductService' is defined but never used.",["195"],["196"],"no-global-assign","no-unsafe-negation"]